
enum AdminSubjectType {
    user,
    role
}

type AdminConnectionGrantInfo {
    connectionId: ID!
    subjectId: ID!
    subjectType: AdminSubjectType!
}

type AdminConnectionSearchInfo {
    displayName: String!
    host: String!
    port: Int!
    possibleDrivers: [ID!]!
    defaultDriver: ID!
}

type AdminUserInfo {
    userId: ID!

    metaParameters: Object!
    configurationParameters: Object!
    grantedRoles: [ID!]!
    grantedConnections: [AdminConnectionGrantInfo!]!

    origin: ObjectOrigin!
}

type AdminRoleInfo {
    roleId: ID!
    roleName: String

    rolePermissions: [ID]!
}

type AdminPermissionInfo {
    id: ID!
    label: String
    description: String

    provider: String!
    category: String
}

input ServerConfigInput {
    serverName: String

    adminName: String
    adminPassword: String

    anonymousAccessEnabled: Boolean
    authenticationEnabled: Boolean
    customConnectionsEnabled: Boolean

    sessionExpireTime: Int
}

extend type Query {

    #### Users and roles

    listUsers(userId: ID): [AdminUserInfo]!
    listRoles(roleId: ID): [AdminRoleInfo]!
    listPermissions: [AdminPermissionInfo]!

    createUser(userId: ID!): AdminUserInfo!
    deleteUser(userId: ID!): Boolean

    createRole(roleId: ID!): AdminRoleInfo!
    deleteRole(roleId: ID!): Boolean

    grantUserRole(userId: ID!, roleId: ID!): Boolean
    revokeUserRole(userId: ID!, roleId: ID!): Boolean

    setSubjectPermissions(roleId: ID!, permissions: [ID!]!): Boolean

    setUserCredentials(userId: ID!, providerId: ID!, credentials: Object!): Boolean

    #### Connection management

    # All connection configurations
    allConnections: [ ConnectionInfo! ]!

    searchConnections( hostNames: [String!]! ): [AdminConnectionSearchInfo!]!

    createConnectionConfiguration( config: ConnectionConfig! ): ConnectionInfo!
    copyConnectionConfiguration( nodePath: String!, config: ConnectionConfig ): ConnectionInfo!
    updateConnectionConfiguration( id: ID!, config: ConnectionConfig! ): ConnectionInfo!
    deleteConnectionConfiguration( id: ID! ): Boolean

    # Permissions

    getConnectionSubjectAccess(connectionId: ID): [AdminConnectionGrantInfo!]!
    setConnectionSubjectAccess(connectionId: ID!, subjects: [ID!]!): Boolean

    getSubjectConnectionAccess(subjectId: ID): [AdminConnectionGrantInfo!]!
    setSubjectConnectionAccess(subjectId: ID!, connections: [ID!]!): Boolean

    #### Global configuration

    configureServer(configuration: ServerConfigInput!): Boolean!

    # Changes default navigator settings
    setDefaultNavigatorSettings( settings: NavigatorSettingsInput!): Boolean!

}
